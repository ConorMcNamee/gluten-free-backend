// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package db

import (
	"context"
)

const getUsers = `-- name: getUsers :many
select id, first_name, last_name, password_hash, email, username, dob from users where id = $1
`

func (q *Queries) getUsers(ctx context.Context, id int32) ([]User, error) {
	rows, err := q.db.Query(ctx, getUsers, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []User
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.FirstName,
			&i.LastName,
			&i.PasswordHash,
			&i.Email,
			&i.Username,
			&i.Dob,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
